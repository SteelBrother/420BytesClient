@page "/counter"
@inject IIndiceUsuarios_ViewModel IIndiceUsuarios_ViewModel
@using System.Globalization
@using _420BytesClient.App.ViewModels.Interfaces;
@using _420BytesClient.DT.Usuario;
@inject IJSRuntime js

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <h1>Usuarios</h1>

            <div>
                <EditForm Model="UsuarioLlenar" OnValidSubmit="RegistrarUsuario">

                    <p>Registrar usuario</p>
                    <input type="text" @bind="@UsuarioLlenar.Cedula" />
                    <input type="text" @bind="@UsuarioLlenar.Nombre" />

                    <input value="Guardar" Type="submit">

                </EditForm>


            </div>
        </div>
    </div>
    @if (IIndiceUsuarios_ViewModel.Usuarios != null)
    {
        <div class="row">
            <div class="col-sm-12">
                <div>
                    <table class="default">

                        <tr>
                            <td>Cedula</td>
                            <td>Nombre</td>
                            <td></td>
                            <td></td>
                        </tr>
                        @foreach (var item in IIndiceUsuarios_ViewModel.Usuarios)
                        {
                            <tr>
                                <td><input @bind-value="@item.Cedula"> </td>
                                <td><input @bind-value="@item.Nombre"> </td>
                                <td><button @onclick="() => ActualizarUsuario2(item)">Actualizar</button> </td>
                                <td><button @onclick="() => BorrarUsuario(item.Cedula)">Borrar</button> </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    }
    
</div>

@code {
    private string CedulaIngresadaF { get; set; }
    private string NombreIngresadoF { get; set; }

    Usuario UsuarioLlenar = new Usuario();

    protected async override Task OnInitializedAsync()
    {
        await IIndiceUsuarios_ViewModel.ObtenerListaUsuariosAsync();
    }

    public async Task RegistrarUsuario()
    {
        await IIndiceUsuarios_ViewModel.RegitrarUsuario(UsuarioLlenar);
    }
    public async Task ActualizarUsuario2(Usuario Usuario)
    {
        await IIndiceUsuarios_ViewModel.ActualizarUsuario(Usuario);
    }

    public async Task BorrarUsuario(int Cedula)
    {
        await IIndiceUsuarios_ViewModel.BorrarUsuario(Cedula);
    }

}